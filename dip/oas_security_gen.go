// Code generated by ogen, DO NOT EDIT.

package dip

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// ApiKeyHeader provides ApiKeyHeader security value.
	// Beispiel: *ApiKey rgsaY4U.oZRQKUHdJhF9qguHMkwCGIoLaqEcaHjYLF*.
	ApiKeyHeader(ctx context.Context, operationName string) (ApiKeyHeader, error)
	// ApiKeyQuery provides ApiKeyQuery security value.
	// Beispiel: *rgsaY4U.oZRQKUHdJhF9qguHMkwCGIoLaqEcaHjYLF*.
	ApiKeyQuery(ctx context.Context, operationName string) (ApiKeyQuery, error)
}

func (s *Client) securityApiKeyHeader(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.ApiKeyHeader(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"ApiKeyHeader\"")
	}
	req.Header.Set("Authorization", t.APIKey)
	return nil
}
func (s *Client) securityApiKeyQuery(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.ApiKeyQuery(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"ApiKeyQuery\"")
	}
	q := req.URL.Query()
	q.Set("apikey", t.APIKey)
	req.URL.RawQuery = q.Encode()
	return nil
}
